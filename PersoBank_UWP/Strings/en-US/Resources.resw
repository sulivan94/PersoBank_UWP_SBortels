<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="addCategoryAverageAmount.Text" xml:space="preserve">
    <value>Average amount</value>
  </data>
  <data name="addCategoryCancelButton.Content" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="addCategoryExpenseRadioButton.Content" xml:space="preserve">
    <value>Expense</value>
  </data>
  <data name="addCategoryIncomeRadioButton.Content" xml:space="preserve">
    <value>Income</value>
  </data>
  <data name="addCategoryLabel.Text" xml:space="preserve">
    <value>Label *</value>
  </data>
  <data name="addCategorySaveButton.Content" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="addCategorySuccess" xml:space="preserve">
    <value>The category "{0}" was successfully added !</value>
  </data>
  <data name="addCategoryTitle.Text" xml:space="preserve">
    <value>New category</value>
  </data>
  <data name="addCategoryType.Text" xml:space="preserve">
    <value>Type *</value>
  </data>
  <data name="addPlaceAverageAmount.Text" xml:space="preserve">
    <value>Average amount</value>
  </data>
  <data name="addPlaceCancelButton.Content" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="addPlaceCategory.Text" xml:space="preserve">
    <value>Category *</value>
  </data>
  <data name="addPlaceCity.Text" xml:space="preserve">
    <value>City *</value>
  </data>
  <data name="addPlaceName.Text" xml:space="preserve">
    <value>Name *</value>
  </data>
  <data name="addPlacePostalCode.Text" xml:space="preserve">
    <value>Postal code</value>
  </data>
  <data name="addPlaceSaveButton.Content" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="addPlaceStreet.Text" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="addPlaceStreetNumber.Text" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="addPlaceSuccess" xml:space="preserve">
    <value>The place "{0}" was successfully added !</value>
  </data>
  <data name="addPlaceTitle.Text" xml:space="preserve">
    <value>New place</value>
  </data>
  <data name="apiBadRequest" xml:space="preserve">
    <value>The request sent to the server is invalid !</value>
  </data>
  <data name="apiDefaultError" xml:space="preserve">
    <value>Connection error : {0}</value>
  </data>
  <data name="apiInternalServerError" xml:space="preserve">
    <value>An internal server error has occurred !</value>
  </data>
  <data name="apiNotFound" xml:space="preserve">
    <value>The resource was not found !</value>
  </data>
  <data name="apiUnauthorized" xml:space="preserve">
    <value>You are not allowed to perform this operation !</value>
  </data>
  <data name="apiUnavailable" xml:space="preserve">
    <value>The server is temporarily unavailable or under maintenance !</value>
  </data>
  <data name="categoriesTitle.Text" xml:space="preserve">
    <value>Categories management</value>
  </data>
  <data name="categoryValidationBeetween1And99999Amount" xml:space="preserve">
    <value>The average amount must be between 1€ and 99999€ !</value>
  </data>
  <data name="categoryValidationEmptyLabel" xml:space="preserve">
    <value>Introduce the name of the new category !</value>
  </data>
  <data name="categoryValidationLengthLabel" xml:space="preserve">
    <value>The category name must contain between 4 and 100 caracters !</value>
  </data>
  <data name="categoryValidationWrongFormat" xml:space="preserve">
    <value>Wrong category name !</value>
  </data>
  <data name="categoryValidationWrongFormatAmount" xml:space="preserve">
    <value>Wrong format for the amount... Only use digits and the comma as unit/decimal separator</value>
  </data>
  <data name="connection.errorTitle" xml:space="preserve">
    <value>Access denied</value>
  </data>
  <data name="connectionButton.Content" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="connectionLoginLabel.Text" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="connectionPasswordLabel.Text" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="connectionTitle.Text" xml:space="preserve">
    <value>Connection</value>
  </data>
  <data name="connectionWrongId" xml:space="preserve">
    <value>Wrong login and/or password !</value>
  </data>
  <data name="deletePlaceSuccess" xml:space="preserve">
    <value>The place "{0}" was successfully deleted !</value>
  </data>
  <data name="expensesGestionCategory.Content" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="expensesGestionPlace.Content" xml:space="preserve">
    <value>Place</value>
  </data>
  <data name="expensesGestionPourcent.Text" xml:space="preserve">
    <value>with a variation of the average of at least</value>
  </data>
  <data name="expensesGestionPourcentageError" xml:space="preserve">
    <value>Please choose a positive percentage !</value>
  </data>
  <data name="expensesGestionSearchButton.Content" xml:space="preserve">
    <value>Research</value>
  </data>
  <data name="homeBestCategory.Text" xml:space="preserve">
    <value>Category most requested :</value>
  </data>
  <data name="homeBestPlace.Text" xml:space="preserve">
    <value>Most frequented place :</value>
  </data>
  <data name="homeButtonAverages.Content" xml:space="preserve">
    <value>Average expenses</value>
  </data>
  <data name="homeButtonCategories.Content" xml:space="preserve">
    <value>Categories management</value>
  </data>
  <data name="homeButtonPlaces.Content" xml:space="preserve">
    <value>Places management</value>
  </data>
  <data name="homeNewInscriptions.Text" xml:space="preserve">
    <value>New registrants :</value>
  </data>
  <data name="homeRecap.Text" xml:space="preserve">
    <value>Summary since :</value>
  </data>
  <data name="homeTransactions.Text" xml:space="preserve">
    <value> transactions</value>
  </data>
  <data name="homeWelcome.Text" xml:space="preserve">
    <value>Welcome to PersoBank</value>
  </data>
  <data name="loginPasswordValidation" xml:space="preserve">
    <value>Please enter your password</value>
  </data>
  <data name="loginUserNameValidation" xml:space="preserve">
    <value>Please enter your username</value>
  </data>
  <data name="modifyCategoryAverageAmount.Text" xml:space="preserve">
    <value>Average amount</value>
  </data>
  <data name="modifyCategoryCancelButton.Content" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="modifyCategoryExpenseRadioButton.Content" xml:space="preserve">
    <value>Expense</value>
  </data>
  <data name="modifyCategoryIncomeRadioButton.Content" xml:space="preserve">
    <value>Income</value>
  </data>
  <data name="modifyCategoryLabel.Text" xml:space="preserve">
    <value>Label *</value>
  </data>
  <data name="modifyCategoryNbTransactions.Text" xml:space="preserve">
    <value>Number of transactions</value>
  </data>
  <data name="modifyCategoryNewAverage.Text" xml:space="preserve">
    <value>Updated average</value>
  </data>
  <data name="modifyCategorySaveButton.Content" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="modifyCategorySuccess" xml:space="preserve">
    <value>The category "{0}" was updated !</value>
  </data>
  <data name="modifyCategoryTheoreticalAverage.Text" xml:space="preserve">
    <value>Theoretical average</value>
  </data>
  <data name="modifyCategoryTitle.Text" xml:space="preserve">
    <value>Category modification</value>
  </data>
  <data name="modifyCategoryTotalAmount.Text" xml:space="preserve">
    <value>Total amount</value>
  </data>
  <data name="modifyCategoryType.Text" xml:space="preserve">
    <value>Type *</value>
  </data>
  <data name="modifyPlaceSuccess" xml:space="preserve">
    <value>The place "{0}" was updated !</value>
  </data>
  <data name="placesTitle.Text" xml:space="preserve">
    <value>Places management</value>
  </data>
  <data name="placeValidationBeetween1000And9999PostalCode" xml:space="preserve">
    <value>The postal code must be between 1000 and 9999 !</value>
  </data>
  <data name="placeValidationBeetween1And99999Amount" xml:space="preserve">
    <value>The average amount must be between 1€ and 99999€ !</value>
  </data>
  <data name="placeValidationBeetween1And9999Number" xml:space="preserve">
    <value>The street number must be between 1 and 9999 !</value>
  </data>
  <data name="placeValidationEmptyCategory" xml:space="preserve">
    <value>Please choose a category !</value>
  </data>
  <data name="placeValidationEmptyCity" xml:space="preserve">
    <value>Introduce the place's localisation !</value>
  </data>
  <data name="placeValidationEmptyName" xml:space="preserve">
    <value>Introduce the name of the new establishment !</value>
  </data>
  <data name="placeValidationLengthCity" xml:space="preserve">
    <value>The city name must contain between 2 and 100 caracters !</value>
  </data>
  <data name="placeValidationLengthName" xml:space="preserve">
    <value>The name of the establishment must contain between 4 and 100 caracters !</value>
  </data>
  <data name="placeValidationLengthStreet" xml:space="preserve">
    <value>The street name must contain between 2 and 100 caracters !</value>
  </data>
  <data name="placeValidationWrongFormatAmount" xml:space="preserve">
    <value>Wrong format for the amount... Only use digits and the comma as unit/decimal separator</value>
  </data>
  <data name="placeValidationWrongFormatCity" xml:space="preserve">
    <value>The city name is wrong !</value>
  </data>
  <data name="placeValidationWrongFormatName" xml:space="preserve">
    <value>The name of the establishment is wrong !</value>
  </data>
  <data name="placeValidationWrongFormatNumber" xml:space="preserve">
    <value>Wrong format for the street number... Only use digits !</value>
  </data>
  <data name="placeValidationWrongFormatPostalCode" xml:space="preserve">
    <value>Wrong format for the postal code... Only use digits !</value>
  </data>
  <data name="placeValidationWrongFormatStreet" xml:space="preserve">
    <value>Wrong street name !</value>
  </data>
  <data name="updatePlaceCurrentAverage.Text" xml:space="preserve">
    <value>Current average</value>
  </data>
  <data name="updatePlaceNbTransactions.Text" xml:space="preserve">
    <value>Number of transactions</value>
  </data>
  <data name="updatePlaceTheoreticalAverage.Text" xml:space="preserve">
    <value>Theoretical average</value>
  </data>
  <data name="updatePlaceTitle.Text" xml:space="preserve">
    <value>Updating place</value>
  </data>
  <data name="updatePlaceTotalAmount.Text" xml:space="preserve">
    <value>Total amount</value>
  </data>
  <data name="expensesGestionCategoryError" xml:space="preserve">
    <value>No categories found !</value>
  </data>
  <data name="expensesGestionPlaceError" xml:space="preserve">
    <value>No places found !</value>
  </data>
  <data name="requiredFields.Text" xml:space="preserve">
    <value>* Required fields</value>
  </data>
</root>